<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.vmware</groupId>
	<artifactId>asimov</artifactId>
	<version>1.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>${project.artifactId}</name>
	<url>${company-url}</url>

	<description>
       This is Asimov. We are using it to feel our way through Maven.
       Some other information of note:
       
       JAVA_HOME is ${env.JAVA_HOME}
       M2_HOME is ${env.M2_HOME}
       The current operating system is name: ${os.name}
    </description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<company-url>http://www.vmware.com</company-url>
		<company-name>VM Ware</company-name>
		<junit-version>4.11</junit-version>
		<db.username>scott</db.username>
		<db.password>secret</db.password>
		<testng.verbosity>10</testng.verbosity>
		<testng.useJUnit>true</testng.useJUnit>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>15.0</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8.7</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<organization>
		<name>${company-name}</name>
		<url>${company-url}</url>
	</organization>

	<developers>
		<developer>
			<id>dhinojosa</id>
			<name>Daniel Hinojosa</name>
			<email>dhinojosa@evolutionnext.com</email>
			<roles>
				<role>Benevolent Overload</role>
			</roles>
		</developer>
		<developer>
			<id>aphagwani</id>
			<name>Amit Phagwani</name>
			<email>aphagwani@vmware.com</email>
			<roles>
				<role>Commander of the North</role>
			</roles>
		</developer>
	</developers>

	<build>
		<defaultGoal>dependency:tree</defaultGoal>
		<finalName>${company-name}-${project.artifactId}-${project.version}</finalName>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>show_dependency_tree</id>
						<phase>clean</phase>
						<goals>
							<goal>tree</goal>
						</goals>
					</execution>
					<execution>
						<id>copy_junit</id>
						<phase>package</phase>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>junit</groupId>
									<artifactId>junit</artifactId>
									<version>4.11</version>
								</artifactItem>
							</artifactItems>
						</configuration>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>
							${project.build.testOutputDirectory}/testng.xml
						</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<reportPlugins>
						<reportPlugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.7</version>
						</reportPlugin>
						<reportPlugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>2.9.1</version>
						</reportPlugin>
						<reportPlugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>2.16</version>
						</reportPlugin>
						<reportPlugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>2.6</version>
						</reportPlugin>
					</reportPlugins>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>winOnly</id>
			<activation> 
				<os>
					<name>Windows 7</name>
				</os>
				<jdk>1.7</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>run-notepad</id>
								<phase>install</phase>
								<configuration>
									<executable>notepad.exe</executable>
								</configuration>
								<goals>
								  <goal>exec</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>development</id>
			<properties>
				<db.url>jdbc:mysql://localhost/mydb</db.url>
				<db.port>3036</db.port>
			</properties>
		</profile>
		<profile>
			<id>production</id>
			<properties>
				<db.username>admin</db.username>
				<db.password>54Efgh117#34fGIssR</db.password>
				<db.url>jdbc:oracle:thin://144.22.33.100/production</db.url>
				<db.port>11208</db.port>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>create-zips-tars</id>
								<phase>package</phase>
								<configuration>
									<descriptorRefs>
										<descriptorRef>jar-with-dependencies</descriptorRef>
										<descriptorRef>project</descriptorRef>
										<descriptorRef>bin</descriptorRef>
										<descriptorRef>src</descriptorRef>
									</descriptorRefs>
								</configuration>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>myDebug</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<configuration>
							<target>
								<echo message="We are using the antrun plugin" />
							</target>
						</configuration>
						<executions>
							<execution>
								<id>clean_message</id>
								<phase>pre-clean</phase> <!-- I want this to run during clean -->
								<configuration>
									<target>
										<echo message="We are cleaning the project ${project.artifactId}" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>compile_message</id>
								<phase>compile</phase> <!-- I want this to run during clean -->
								<configuration>
									<target>
										<echo message="We are compiling the project ${project.artifactId}" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>





















